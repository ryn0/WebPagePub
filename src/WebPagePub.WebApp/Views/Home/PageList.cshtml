@model WebPagePub.WebApp.Models.SitePage.SitePageDisplayModel
@inject WebPagePub.Services.Interfaces.ICacheService _cacheHelper
@using WebPagePub.Data.Enums;
@using WebPagePub.Core.Utilities
 
@section StylesHeader {
 
    }

<section>
    <div class="container">

        <div class="row">
            
                @if (string.IsNullOrWhiteSpace(Model.TagKeyword))
                {
                    <h1 class="main-page-header">@Model.PageContent.PageHeader</h1>
                }
                else
                {
                    <h1 class="main-page-header">Tagged &quot;@Model.TagKeyword&quot;</h1>
                }
                @{ await Html.RenderPartialAsync("_BreadcrumbList", Model.BreadcrumbList); }
                @{ await Html.RenderPartialAsync("_StructuredDataOrganization", Model.Organization); }
                @{ await Html.RenderPartialAsync("_StructuredDataWebsite", Model.Website); }

            <hr />

            @foreach (var sitePage in Model.Items)
            {
                var sitePageUrlPath = sitePage.UrlPath.TrimStart('/');
                <div class="post-preview">

                    <h3 class="post-title"><a href="~/@sitePageUrlPath" title="@sitePage.PageHeader">@sitePage.BreadcrumbName</a></h3>

                    @if (!string.IsNullOrWhiteSpace(sitePage.DefaultPhotoThumbCdnUrl))
                    {
                        <a href="~/@sitePageUrlPath" title="@sitePage.PageHeader">
                            <img class="img-responsive img-page-list"
                                 src="@sitePage.DefaultPhotoThumbCdnUrl"
                                 alt="@sitePage.PageHeader"
                                 title="@sitePage.PageHeader" />
                        </a>
                    }
                    <i class="post-meta">@sitePage.FriendlyLastUpdateDateDisplay</i>

                    <p class="post-subtitle">
                        @sitePage.MetaDescription
                    </p>

                    @if (sitePage.Tags.Count > 0)
                    {
                        <div style="clear:both"></div>
                        var current = 1;

                        <div class="sitePage-tags">
                            <b>Tagged:</b>
                            @foreach (var tag in sitePage.Tags)
                            {
                                <a href="~/tag/@tag.UrlKey()">@tag</a>if (current != sitePage.Tags.Count) {<text>, </text>current++;}
                            }
                        </div>
                    }

                    <div style="clear:both"></div>
                    <hr />
                </div>
            }

            <partial name="_PagingPartial" />

        </div>
     
    </div>
</section>
 
@section ScriptsFooter{

}

@{ await Html.RenderPartialAsync("_LoginPartialPageEdit", Model); }