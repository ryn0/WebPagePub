@model WebPagePub.Web.Models.SitePageDisplayModel
@using WebPagePub.Core.Utilities
@{
    ViewData["Title"] = Model.PageContent.Title;
    ViewData["PhotoUrl"] = Model.PageContent.PhotoUrl;
    ViewData["PhotoUrlWidth"] = Model.PageContent.PhotoUrlWidth;
    ViewData["PhotoUrlHeight"] = Model.PageContent.PhotoUrlHeight;
    ViewData["MetaDescription"] = Model.PageContent.MetaDescription;
    ViewData["MetaKeywords"] = Model.PageContent.MetaKeywords;
    ViewData["CanonicalUrl"] = Model.PageContent.CanonicalUrl;
}
@section StylesHeader {
}


<section>
    <div class="container">
        <div class="row">
            <div class="col-md-12">

                <h1 class="main-page-header">@Model.PageContent.PageHeader</h1>

                @{ await Html.RenderPartialAsync("_BreadcrumbList", Model.BreadcrumbList); }
                @{ await Html.RenderPartialAsync("_StructuredDataOrganization", Model.Organization); }
                @{ await Html.RenderPartialAsync("_StructuredDataWebsite", Model.Website); }

                <article>
                    <i>Last updated:  @Model.PageContent.FriendlyLastUpdateDateDisplay</i>
                    <hr />
                     @if (Model.PageContent.Photos.Any())
                     {
   
                            await Html.RenderPartialAsync("_ListPhotos", Model.PageContent.Photos);

                     }

                    @Html.Raw(Model.PageContent.Content)

                    <hr />
                    @if (Model.AllowCommenting)
                    {
                        await Html.RenderPartialAsync("_ListComments", Model.Comments);


                        await Html.RenderPartialAsync("_PostComment", Model.PostComment);

                        <hr />
                    }


                    @if (Model.PageContent.Tags.Count > 0)
                    {
                        var current = 1;

                        <div class="page-tags">
                            <b>Tagged:</b>
                            @foreach (var tag in Model.PageContent.Tags)
                            {
                                <a href="~/tag/@tag.UrlKey()">@tag</a>if (current != Model.PageContent.Tags.Count)
                                {<text>, </text>
                                current++;
                            }
                        }
                        </div>
                    }
                </article>
            </div>
        </div>


    </div>
</section>

@section ScriptsFooter{

}

@{ await Html.RenderPartialAsync("_LoginPartialPageEdit", Model); }