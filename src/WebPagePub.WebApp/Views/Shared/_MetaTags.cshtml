@inject WebPagePub.Services.Interfaces.ICacheService _cacheHelper
@using WebPagePub.Data.Enums;
@using WebPagePub.Data.Constants;
<meta property="og:type" content="website" />

@if (ViewData["Title"] != null &&
!string.IsNullOrWhiteSpace(Convert.ToString(ViewData["Title"])))
{
    <meta property="og:title" content="@ViewData["Title"]" />
}
@if (ViewData[WebApp.Constants.StringConstants.CanonicalUrl] != null &&
!string.IsNullOrWhiteSpace(Convert.ToString(ViewData[WebApp.Constants.StringConstants.CanonicalUrl])))
{
    <meta property="og:url" content="@ViewData[WebApp.Constants.StringConstants.CanonicalUrl]" />
}
@if (ViewData["MetaDescription"] != null &&
!string.IsNullOrWhiteSpace(Convert.ToString(ViewData["MetaDescription"])))
{
    <meta property="og:description" content="@ViewData["MetaDescription"]" />
}
@if (ViewData["PhotoUrl"] != null &&
!string.IsNullOrWhiteSpace(Convert.ToString(ViewData["PhotoUrl"])))
{
    <meta property="og:image" content="@ViewData["PhotoUrl"]" />
}
@if (ViewData["PhotoUrlWidth"] != null &&
!string.IsNullOrWhiteSpace(Convert.ToString(ViewData["PhotoUrlWidth"])) &&
Convert.ToString(ViewData["PhotoUrlWidth"]) != "0")
{
    <meta property="og:image:width" content="@ViewData["PhotoUrlWidth"]" />
}
@if (ViewData["PhotoUrlHeight"] != null &&
!string.IsNullOrWhiteSpace(Convert.ToString(ViewData["PhotoUrlHeight"])) &&
Convert.ToString(ViewData["PhotoUrlWidth"]) != "0")
{
    <meta property="og:image:height" content="@ViewData["PhotoUrlHeight"]" />
}
@if (ViewData[WebApp.Constants.StringConstants.ArticlePublishTime] != null)
{
    <meta property="article:published_time" content="@ViewData[WebApp.Constants.StringConstants.ArticlePublishTime]" />
}
@if (ViewData["AuthorName"] != null &&
!string.IsNullOrWhiteSpace(Convert.ToString(ViewData["AuthorName"])))
{
    <meta property="article:author" content="@ViewData["AuthorName"]" />
}
@{var siteName = _cacheHelper.GetSnippet(SiteConfigSetting.WebsiteName);}
@if (!string.IsNullOrWhiteSpace(siteName))
{
    <meta property="og:site_name" content="@siteName" />
}
    <meta property="og:locale" content="en_US" />
@if (ViewData["MetaDescription"] != null &&
!string.IsNullOrWhiteSpace(Convert.ToString(ViewData["MetaDescription"])))
{
    <meta name="description" content="@ViewData["MetaDescription"]" />
}
@if (ViewData["MetaKeywords"] != null &&
!string.IsNullOrWhiteSpace(Convert.ToString(ViewData["MetaKeywords"])))
{
    <meta name="keywords" content="@ViewData["MetaKeywords"]" />
}
@if (ViewData["ExcludePage"] != null)
{
    if (Convert.ToBoolean(ViewData["ExcludePage"]) == true)
    {
    <meta name="robots" content="noindex" />
    }
    else
    {
    <meta name="robots" content="index, follow, max-image-preview:large, max-snippet:-1, max-video-preview:-1" />
    }
}
@if (ViewData[WebApp.Constants.StringConstants.CanonicalUrl] != null &&
!string.IsNullOrWhiteSpace(Convert.ToString(ViewData[WebApp.Constants.StringConstants.CanonicalUrl])))
{
    <link rel="canonical" href="@ViewData[WebApp.Constants.StringConstants.CanonicalUrl]" />
}
@{
    var googleSiteVerification = _cacheHelper.GetSnippet(SiteConfigSetting.GoogleSiteVerification);
}
@if (!string.IsNullOrWhiteSpace(googleSiteVerification))
{
    @Html.Raw(googleSiteVerification)

}