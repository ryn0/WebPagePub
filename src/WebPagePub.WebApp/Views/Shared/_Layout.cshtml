@inject WebPagePub.Services.Interfaces.ICacheService _cacheHelper
@using WebPagePub.Data.Enums;
<!DOCTYPE html>
<html lang="@WebPagePub.WebApp.Constants.StringConstants.DefaultLanguage">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>@ViewData["Title"]</title>
    <partial name="_MetaTags" />
    <partial name="_FavIcons" />
    <environment names="Development,Staging,Production">
        @Html.Raw(_cacheHelper.GetSnippet(SiteConfigSetting.HeaderHtml))
    </environment>
    @RenderSection("StylesHeader", required: false)
    @RenderSection("ScriptsHeader", required: false)

    <script type="application/ld+json">
        @Html.Raw(ViewData[WebPagePub.WebApp.Constants.StringConstants.ArticleJson])
    </script>

    <style>
        /* bar color + remove gap under bar */
        .nav-header {
            background: #0C5B9C;
        }

        .navbar, .navbar-default {
            margin-bottom: 0 !important;
            border: 0 !important;
            box-shadow: none !important;
        }

            /* make the header row the positioning context for the burger */
            .navbar .container {
                position: relative;
            }

        /* ======= Pure CSS toggle (checkbox + label) ======= */

        /* Visually hide the checkbox, keep it accessible */
        #nav-toggle {
            position: absolute !important;
            width: 1px !important;
            height: 1px !important;
            padding: 0 !important;
            margin: 0 !important;
            border: 0 !important;
            overflow: hidden !important;
            clip: rect(0 0 0 0) !important;
            white-space: nowrap !important;
        }

        /* STRONG override against any global .nav-toggle rules on the site */
        .nav-header #nav-toggle + label.nav-toggle {
            position: absolute !important;
            top: 50% !important;
            right: 12px !important;
            left: auto !important;
            transform: translateY(-50%) !important; /* kill any translateX from theme */
            display: block !important;
            width: 38px !important;
            height: 34px !important;
            padding: 0 !important;
            margin: 0 !important;
            line-height: 0 !important;
            background: transparent !important;
            border: 0 !important;
            box-shadow: none !important;
            text-indent: 0 !important;
            z-index: 5 !important;
            cursor: pointer !important;
            -webkit-tap-highlight-color: transparent;
        }
            /* ignore clicks on spans inside the label */
            .nav-header #nav-toggle + label.nav-toggle * {
                pointer-events: none;
            }

            /* Hamburger bars */
            .nav-header #nav-toggle + label.nav-toggle .icon-bar {
                display: block;
                width: 24px;
                height: 2px;
                margin: 5px 0;
                background: #fff;
            }

            /* Reset any generic label styling that leaks in */
            .nav-header #nav-toggle + label.nav-toggle,
            .nav-header #nav-toggle + label.nav-toggle:before,
            .nav-header #nav-toggle + label.nav-toggle:after {
                font: inherit;
                color: inherit;
                text-align: left;
                text-shadow: none;
                background-image: none;
            }

        /* Base menu UL cleanup (your snippet already outputs Bootstrap classes) */
        .nav-panel .nav, .nav-panel .navbar-nav, .nav-panel .navbar-nav > li {
            list-style: none;
            margin: 0;
            padding: 0;
        }

            .nav-panel .navbar-nav > li > a {
                display: block;
                text-decoration: none;
            }

        /* ===== Mobile (<=991px) ===== */
        @@media (max-width:991px) {
            .navbar-header

        {
            min-height: 56px;
        }

        .nav-panel {
            max-height: 0;
            overflow: hidden;
            transition: max-height .3s ease;
            margin-top: 0;
            border-top: 0;
        }
        /* when checked, drop the panel below the header row */
        #nav-toggle:checked ~ .nav-panel {
            max-height: 80vh;
            margin-top: 56px;
            border-top: 1px solid rgba(255,255,255,.15);
        }

        .nav-panel .nav.navbar-nav {
            float: none !important;
        }

        .nav-panel .nav > li {
            float: none !important;
            border-bottom: 1px solid rgba(255,255,255,.12);
        }

            .nav-panel .nav > li > a {
                color: #fff !important;
                padding: 14px 16px !important;
            }

        /* burger -> X animation */
        #nav-toggle:checked + label.nav-toggle .icon-bar:nth-child(2) {
            opacity: 0;
        }

        #nav-toggle:checked + label.nav-toggle .icon-bar:nth-child(1) {
            transform: translateY(7px) rotate(45deg);
            transform-origin: center;
        }

        #nav-toggle:checked + label.nav-toggle .icon-bar:nth-child(3) {
            transform: translateY(-7px) rotate(-45deg);
            transform-origin: center;
        }

        }

        /* ===== Desktop (>=992px) ===== */
        @@media (min-width:992px) {
            /* hide burger completely on desktop */
            .nav-header #nav-toggle + label.nav-toggle

        {
            display: none !important;
        }

        .nav-panel {
            display: block;
            max-height: none !important;
            overflow: visible !important;
            background: transparent;
            margin-top: 0;
        }

            .nav-panel .nav.navbar-nav {
                float: right !important;
            }

            .nav-panel .nav > li {
                float: left !important;
            }

                .nav-panel .nav > li > a {
                    color: #fff !important;
                    padding: 5px !important;
                    line-height: 26px;
                }

        }
    </style>
</head>
<body>
    <div id="wrapper">
        <nav class="navbar navbar-default nav-header">
            <div class="container">
                <div class="navbar-header">
                    @Html.Raw(_cacheHelper.GetSnippet(SiteConfigSetting.LogoHtml))
                </div>

                <!-- Pure CSS toggle: input + label + panel -->
                <input id="nav-toggle" class="nav-toggle-input" type="checkbox" aria-hidden="true" />
                <label for="nav-toggle" class="nav-toggle" aria-label="Toggle navigation">
                    <span class="sr-only">Toggle navigation</span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </label>

                <div id="primary-menu" class="nav-panel">
                    @Html.Raw(_cacheHelper.GetSnippet(SiteConfigSetting.MenuHtml))
                </div>
            </div>
        </nav>

        <div class="clear"></div>

        <div class="container">
            @RenderBody()
        </div>

        <footer class="site-footer">
            @if (!string.IsNullOrEmpty(_cacheHelper.GetSnippet(SiteConfigSetting.InstagramUrl)))
            {
                <a target="_blank" href="@_cacheHelper.GetSnippet(SiteConfigSetting.InstagramUrl)" class="btn btn-ig"><i class="fa fa-instagram left"></i> Instagram</a>
            }
            @if (!string.IsNullOrEmpty(_cacheHelper.GetSnippet(SiteConfigSetting.FacebookUrl)))
            {
                <a target="_blank" href="@_cacheHelper.GetSnippet(SiteConfigSetting.FacebookUrl)" class="btn btn-fb"><i class="fa fa-facebook left"></i> Facebook</a>
            }
            @if (!string.IsNullOrEmpty(_cacheHelper.GetSnippet(SiteConfigSetting.YouTubeUrl)))
            {
                <a target="_blank" href="@_cacheHelper.GetSnippet(SiteConfigSetting.YouTubeUrl)" class="btn btn-youtube"><i class="fa fa-youtube left"></i> YouTube</a>
            }
            @if (!string.IsNullOrEmpty(_cacheHelper.GetSnippet(SiteConfigSetting.TwitterUrl)))
            {
                <a target="_blank" href="@_cacheHelper.GetSnippet(SiteConfigSetting.TwitterUrl)" class="btn btn-twitter"><i class="fa fa-twitter left"></i> Twitter</a>
            }
            <div class="copyright">
                &copy; @DateTime.UtcNow.Year
                @Html.Raw(@_cacheHelper.GetSnippet(SiteConfigSetting.MenuFooterHtml))
            </div>
        </footer>
    </div>

    <partial name="_LoginPartial" />
    @Html.Raw(_cacheHelper.GetSnippet(SiteConfigSetting.GoogleAnalytics))
    <environment names="Development,Staging,Production">
        @Html.Raw(_cacheHelper.GetSnippet(SiteConfigSetting.FooterHtml))
    </environment>
    @RenderSection("ScriptsFooter", required: false)
</body>
</html>
